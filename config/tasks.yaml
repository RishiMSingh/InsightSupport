suggestion_generation:
  description: >
    Generate highly actionable and context-aware suggestions for resolving each support ticket.

    Use the following data points:
    - Issue Type: Customize advice based on the type of issue reported in the 'Issue Type' column.
    - Status: Adjust urgency and triage steps based on the ticket's current state in the 'Status' column.
    - Summary: Analyze the issue summary text to detect patterns, pain points, or keywords.

    Where possible, suggest:
    - Root cause hypotheses
    - Escalation conditions
    - Workarounds or remediation steps
    - Expected time to resolution (if estimable)

    Write 3-4 sentence paragraphs per issue that are practical for L1/L2 support engineers to follow.

  expected_output: >
    A list of ticket keys (from 'Issue key') with individual, detailed suggestions to resolve each issue.
    Each suggestion should be in paragraph form, grouped by issue type or urgency level if possible.

table_generation:
  description: >
    Generate summary tables to help stakeholders understand operational trends and support workload.

    Focus on these tables:
    - Issue Type Summary: Frequency of each type of issue in the 'Issue Type' column.
    - Status Breakdown: Count of tickets by current 'Status' (e.g., Open, Closed, In Progress).
    - Reporter Activity: Number of issues filed by each reporter in the 'Reporter' column.
    - Time Analysis: Count of tickets by creation date (bucketed by week or month from the 'Created' column).
    - Voting Trends: Most-voted issues from the 'Votes' column, highlighting areas of high user friction.

    Each table should include proper headers and be formatted for easy integration into a report.

  expected_output: >
    A dictionary of tables in markdown or tabular format (pandas-style or markdown tables).
    Each table should have a title and be suitable for inclusion in both plain-text and HTML-based reports.

chart_generation:
  description: >
    Generate well-labeled, high-resolution visualizations that enhance report readability.

    Use the tables from the previous task to generate:
    - Pie or bar chart showing distribution of 'Issue Type'
    - Bar chart showing ticket counts across different 'Status'
    - Horizontal bar chart of top 10 most active 'Reporters'
    - Time series line chart showing ticket volume over time (parsed from 'Created' dates)
    - Bar chart showing top 10 issues by vote count (from 'Votes')

    Charts should include axis labels, titles, and legends where appropriate.
    Save each chart as a .png in the current directory and return the file path for each.

  expected_output: >
    A dictionary of chart names and their corresponding file paths.
    Each chart should be a high-quality PNG image ready for embedding into the final report.

final_report_assembly:
  description: >
    Create a professional, stakeholder-ready report based on the outputs
    from the suggestion generation, reporting, and chart generation agents.

    Your report must include:

    1. A **written summary** of overall trends observed in the data (no bullet points)
    2. A short paragraph describing the most common issue types and their statuses
    3. A paragraph highlighting which reporters are most active
    4. A **Time-based trend** analysis (e.g., increase/decrease in reports over months)
    5. A **clear list of 3–5 actionable suggestions**, written in business-friendly language
    6. Final markdown-formatted tables for:
        - Issue Type Summary
        - Status Breakdown
        - Top Reporter Activity
        - Time Analysis

    Structure the report with proper markdown headings like:
    ## Executive Summary
    ## Key Trends
    ## Suggested Actions
    ## Issue Type Summary (Table)
    ## Status Breakdown (Table)
    ...
    
    Avoid raw dumps—be concise, readable, and insightful.
  expected_output: >
    A clean, structured markdown report with summary paragraphs and formatted tables, ready to share with decision-makers.

  expected_output: >
    A markdown-style final report that combines:
    - Tables generated by the Reporting Agent
    - Charts generated by the Chart Specialist
    - Suggestions generated by the Suggestion Engine

    Ensure each section is clearly marked and contains its respective insights.
    Do not include ``` or ```markdown syntax in the output.
